/*
  Jamdelier Sketch

  by FELDI

*/


#include <Adafruit_NeoPixel.h> //includes neopixel library
#include <Servo.h> //include the servo library


Servo myservo;  // create servo object to control a servo

const int STRIP = 6;  //declare LED strip to pin 6
int NUMPIXELS =  250; //declare the number of LEDs on the stip
int LEDlevel = 200; //declare the brighness of the LEDs (0-255)
const int MOTION_PIN = 4; // Pin connected to motion sensor
int pos = 0;    // variable to store the servo position


// When we setup the NeoPixel library, we tell it how many pixels, and which pin to use to send signals.
// Note that for older NeoPixel strips you might need to change the third parameter--see the strandtest
// example for more information on possible values.
Adafruit_NeoPixel pixels = Adafruit_NeoPixel(NUMPIXELS, STRIP, NEO_GRB + NEO_KHZ800);

void setup()
{
  Serial.begin(9600);
  pixels.begin(); //initiates communication with neopixels

  // The PIR sensor's output signal is an open-collector,
  // so a pull-up resistor is required:
  pinMode(MOTION_PIN, INPUT_PULLUP);

  myservo.attach(9);  // attaches the servo on pin 9 to the servo object

}

void loop()
{
  int proximity = digitalRead(MOTION_PIN); //read motion sensor and store in proximity variable
  if (proximity == LOW) // If the sensor's output goes low, motion is detected
  {
    Serial.println("Motion detected!"); //alert that the motion sensor should trigger the LED strip

    theaterChase(pixels.Color(LEDlevel, LEDlevel, LEDlevel), 50); // triggers LED animation function
    pixels.show(); // This sends the updated pixel color to the hardware.

    //sends continuious motion to the servo motor
    for (pos = 0; pos <= 180; pos += 1) { // goes from 0 degrees to 180 degrees
      // in steps of 1 degree
      myservo.write(pos);              // tell servo to go to position in variable 'pos'
      delay(15);                       // waits 15ms for the servo to reach the position
    }
    for (pos = 180; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees
      myservo.write(pos);              // tell servo to go to position in variable 'pos'
      delay(15);                       // waits 15ms for the servo to reach the position
    }
  }
  else
  {
    for (int i = 0; i < NUMPIXELS; i++) {
      pixels.setPixelColor(i, pixels.Color(0, 0, 0)); //sets all neopixels to zero brightness, turning them off
      pixels.show(); // This sends the updated pixel color to the hardware.

    }

    myservo.write(90); // tell servo to move to position and remain still
  }
}




//pixel animation function
void theaterChase(uint32_t c, uint8_t wait) {
  for (int j = 0; j < 10; j++) { //do 10 cycles of chasing
    for (int q = 0; q < 3; q++) {
      for (uint16_t i = 0; i < pixels.numPixels(); i = i + 3) {
        pixels.setPixelColor(i + q, c);  //turn every third pixel on
      }
      pixels.show();

      delay(wait);

      for (uint16_t i = 0; i < pixels.numPixels(); i = i + 3) {
        pixels.setPixelColor(i + q, 0);      //turn every third pixel off
      }
    }
  }
}
